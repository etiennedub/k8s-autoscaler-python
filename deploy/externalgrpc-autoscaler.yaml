---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-addon: cluster-autoscaler.addons.k8s.io
    k8s-app: cluster-autoscaler
  name: externalgrpc-autoscaler
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: externalgrpc-autoscaler
  namespace: kube-system
  labels:
    k8s-addon: cluster-autoscaler.addons.k8s.io
    k8s-app: cluster-autoscaler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: externalgrpc-autoscaler
subjects:
  - kind: ServiceAccount
    name: externalgrpc-autoscaler
    namespace: kube-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: externalgrpc-autoscaler
  namespace: kube-system
  labels:
    k8s-addon: cluster-autoscaler.addons.k8s.io
    k8s-app: cluster-autoscaler
rules:
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["delete","list","watch"]
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ca-external-grpc-cloud-provider
  namespace: kube-system
  labels:
    app: ca-external-grpc-cloud-provider
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ca-external-grpc-cloud-provider
  template:
    metadata:
      labels:
        app: ca-external-grpc-cloud-provider
    spec:
      serviceAccountName: externalgrpc-autoscaler
      containers:
        - image: ghcr.io/etiennedub/k8s-autoscaler-python:dev
          name: ca-external-grpc-cloud-provider
          resources:
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 300Mi
          args:
            - /config/config.yaml
          volumeMounts:
            - name: cluster-config
              mountPath: /config
              readOnly: true
          #   - name: cluster-autoscaler-grpc-server-cert
          #     mountPath: "/etc/ssl/server-cert"
          #   - name: ssl-certs
          #     mountPath: /etc/ssl/certs/ca-certificates.crt
          #     readOnly: true
          imagePullPolicy: "Always"
      volumes:
        - name: cluster-config
          configMap:
            name: externalgrpc-autoscaler-cluster-config
        # - name: ssl-certs
        #   hostPath:
        #     path: /etc/ssl/certs/ca-certificates.crt #/etc/ssl/certs/ca-bundle.crt for Amazon Linux Worker Nodes
        # - name: cluster-autoscaler-grpc-server-cert
        #   secret:
        #     secretName: cluster-autoscaler-grpc-server-cert
        #     defaultMode: 0400
